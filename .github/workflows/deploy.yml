name: build

on:
  push:
    branches:
      - master
      - main
    tags:
      - 'v*.*.*'
    paths-ignore:
      - '**.md'

jobs:
  build:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    
    steps: 
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2.3.1
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.0'
      - name: Install dependencies
        run: |
          go version
          go get -u golang.org/x/lint/golint
      - name: Run build
        run: go build .
      - name: Run vet & lint
        run: |
          go vet .
          golint .
      - name: Create a new release
        if: contains(github.ref, 'tags')
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload binaries to the new release
        if: contains(github.ref, 'tags')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: out/kubedeploy*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
      # - name: Run testing
      #   run: cd test && go test -v
      # - name: Send slack notification
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     status: ${{ job.status }}
      #     fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #   if: always()

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }} 
  #   steps:
  #     - name: Checkout üõéÔ∏è
  #       uses: actions/checkout@v2.3.1
  #     - name: Deploy to Docker registry
  #       uses: docker/build-push-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #         repository: ${{ secrets.DOCKER_HUB }}/kubedeploy
  #         tag_with_ref: true
