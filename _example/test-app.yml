apiVersion: v1
kind: Namespace
metadata:
  name: test-app
  labels:
    project: test-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app-blue
  namespace: test-app
  labels:
    app: test-app
    version: "alpine"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-app
  template:
    metadata:
      labels:
        app: test-app
        version: "alpine"
    spec:
      containers:
        - name: test-app
          image: nginx:alpine
          imagePullPolicy: "ifNotPresent"
          ports:
            - name: http
              protocol: TCP
              containerPort: 80
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: 100m
            requests:
              cpu: 100m

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app-green
  namespace: test-app
  labels:
    app: test-app
    version: "dormant"
spec:
  replicas: 0
  selector:
    matchLabels:
      app: test-app
  template:
    metadata:
      labels:
        app: test-app
        version: "dormant"
    spec:
      containers:
        - name: test-app
          image: nginx:dormant
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: http
              protocol: TCP
              containerPort: 80
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            limits:
              cpu: 100m
            requests:
              cpu: 100m

---
apiVersion: v1
kind: Service
metadata:
  namespace: test-app
  name: test-app
spec:
  selector:
    app: test-app
    version: "alphine"
  ports:
    - name: web 
      protocol: TCP
      port: 80

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: test-app-ingress-route
  namespace: test-app
spec:
  entryPoints:
    - web
  routes:
  - match: Host(`www.example.io`)
    kind: Rule
    services:
    - name: test-app
      port: 80
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: test-app
  namespace: test-app
spec:
  maxReplicas: 4
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: test-app-blue
  targetCPUUtilizationPercentage: 80
